Redux constructs application state and react provides views to display that state.
The 2 lib are disconnected and are connected by react-redux library.

Application state is generated by reducer function(root-reducer).
Reducer is a function that returns a piece of the application state.

e.g:
Application state is: 
{
	books:[title:'Harry Potter']		//a piece of state produced by Books Reducer(say)
	activeBooks:[title:'The animal farm']	//a piece of state produced by Activebook Reducer(say)
}
i.e: Reducers produce the values of our state.

Container is a component that has direct access to the state produced by Redux.

Action and Action Creator helps in changing our state.

Events call ActionCreator.
ActionCreator is a function that returns an action(an object which has type and payload).

--->>>
FLOW
Any sort of Events call ActionCreator.
ActionCreator is a function that returns an action(object).
The action that is returned by ActionCreator is send to all the reducers.
Reducers can choose (depending on the action) to return a different piece of state.
Newly returned piece of state gets piped into application state.
Application state gets pumped back into react application which causes all components to reRender.

